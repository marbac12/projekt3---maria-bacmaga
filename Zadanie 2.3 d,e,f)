import numpy as np
import matplotlib.pyplot as plt

def model_populacji(epsilon1, gamma1, h1, epsilon2, gamma2, h2, warunki_poczatkowe):
    h = 0.001
    t = np.arange(0, 50, h)
    N1, N2 = np.zeros(t.shape[0]), np.zeros(t.shape[0])
    N1[0], N2[0] = warunki_poczatkowe

    def pochodne(N):
        dN1_dt = (epsilon1 - gamma1 * (h1 * N[0] + h2 * N[1])) * N[0]
        dN2_dt = (epsilon2 - gamma2 * (h1 * N[0] + h2 * N[1])) * N[1]
        return np.array([dN1_dt, dN2_dt])

    for i in range(1, t.shape[0]):
        k1 = h * pochodne([N1[i-1], N2[i-1]])
        k2 = h * pochodne([N1[i-1] + 0.5 * k1[0], N2[i-1] + 0.5 * k1[1]])
        k3 = h * pochodne([N1[i-1] + 0.5 * k2[0], N2[i-1] + 0.5 * k2[1]])
        k4 = h * pochodne([N1[i-1] + k3[0], N2[i-1] + k3[1]])

        N1[i] = max(N1[i-1] + (k1[0] + 2*k2[0] + 2*k3[0] + k4[0]) / 6, 0)
        N2[i] = max(N2[i-1] + (k1[1] + 2*k2[1] + 2*k3[1] + k4[1]) / 6, 0)

        if N1[i] == 0 and N2[i] == 0:
            break

    return N1, N2

epsilon1, gamma1, h1 = 0.8, 1, 0.3
epsilon2, gamma2, h2 = 0.4, 0.5, 0.4

warunki_poczatkowe_c = (4, 8)
warunki_poczatkowe_d = (8, 8)
warunki_poczatkowe_e = (12, 8)

N1_c, N2_c = model_populacji(epsilon1, gamma1, h1, epsilon2, gamma2, h2, warunki_poczatkowe_c)
N1_d, N2_d = model_populacji(epsilon1, gamma1, h1, epsilon2, gamma2, h2, warunki_poczatkowe_d)
N1_e, N2_e = model_populacji(epsilon1, gamma1, h1, epsilon2, gamma2, h2, warunki_poczatkowe_e)

fig, ax = plt.subplots()
ax.plot(N1_c, N2_c, label='(N1, N2) = (4, 8)')
ax.plot(N1_d, N2_d, label='(N1, N2) = (8, 8)')
ax.plot(N1_e, N2_e, label='(N1, N2) = (12, 8)')
ax.set_xlabel('Liczba osobników populacji N1')
ax.set_ylabel('Liczba osobników populacji N2')
ax.set_title('Zadanie 2.3 - Portret fazowy dla podanych warunków początkowych, podpunkt d,e,f')
ax.legend()
ax.grid()  
plt.show()
